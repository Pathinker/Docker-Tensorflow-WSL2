# Use this as a Docker file example when TensorFlow images from recent version are misconfigured or have mismatched Cuda and cuDNN versions.
# Do not forget to upgrade the versions from the requirements.txt since some are only compatible with specific versions.
# Update over time the ubuntu, python version from the images and the Nvidia archive links.

FROM python:3.12 AS python-stage

FROM ubuntu:22.04

COPY --from=python-stage /usr/local /usr/local
RUN update-alternatives --install /usr/bin/python python /usr/local/bin/python3.12 1 \
    && update-alternatives --install /usr/bin/pip pip /usr/local/bin/pip3 1

RUN apt update && apt install -y \
                                wget \
                                build-essential

RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-ubuntu2204.pin && \
    mv cuda-ubuntu2204.pin /etc/apt/preferences.d/cuda-repository-pin-600 && \
    wget https://developer.download.nvidia.com/compute/cuda/12.5.0/local_installers/cuda-repo-ubuntu2204-12-5-local_12.5.0-555.42.02-1_amd64.deb && \
    dpkg -i cuda-repo-ubuntu2204-12-5-local_12.5.0-555.42.02-1_amd64.deb && \
    cp /var/cuda-repo-ubuntu2204-12-5-local/cuda-*-keyring.gpg /usr/share/keyrings/ && \
    apt-get update && \
    apt-get -y install cuda-toolkit-12-5 && \
    rm -f cuda-repo-ubuntu2204-12-5-local_12.5.0-555.42.02-1_amd64.deb

RUN wget https://developer.download.nvidia.com/compute/cudnn/9.3.0/local_installers/cudnn-local-repo-ubuntu2204-9.3.0_1.0-1_amd64.deb && \
    dpkg -i cudnn-local-repo-ubuntu2204-9.3.0_1.0-1_amd64.deb && \
    cp /var/cudnn-local-repo-ubuntu2204-9.3.0/cudnn-*-keyring.gpg /usr/share/keyrings/ && \
    apt-get update && \
    apt-get -y install cudnn && \
    rm -f cudnn-local-repo-ubuntu2204-9.3.0_1.0-1_amd64.deb

ENV CUDA_HOME=/usr/local/cuda
ENV PATH=$CUDA_HOME/bin:$PATH
ENV LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH:-}

WORKDIR /app
COPY . .

COPY requirements.txt requirements.txt
RUN pip install -r requirements.txt